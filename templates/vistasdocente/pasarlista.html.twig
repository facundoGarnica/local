{% block title %}{% endblock %}

<link rel="stylesheet" href="{{ asset('css/PasarListas.css') }}">

{% block body %}
<div id="PasarAsistenciaModal" class="AsistenciaModal1">
    <div id="alumno-container">
        <div class="alumno-card">
            <div class="fecha-actual" id="fecha-actual"></div>
            <h2 class="AlumnoNombre">Nombre Apellido</h2> 
            <p class="AlumnoDni">DNI: 12345678</p>
            <p id="estado">Estado: 
                <span class="estado-text estado-neutral">No marcado</span>
            </p>
            <p id="observacion" style="visibility: hidden;">
                Observaci√≥n: <input type="text" id="observacion-input" placeholder="Completar...">
            </p>
            <button id="enviar" style="visibility: hidden;" class="btn btn-primary mt-2">Guardar</button>
            <p id="confirmacion" style="visibility: hidden; color: green; margin-top: 10px;">
                ‚úÖ Datos guardados correctamente
            </p>
        </div>
    </div>

    <div class="botones mt-3">
        <button id="anterior">‚¨ÖÔ∏è</button>
        <button id="presente">‚úÖ Presente (F1)</button>
        <button id="ausente">‚ùå Ausente (F2)</button>
        <button id="mediafalta">‚è≥ Media falta (F3)</button>
        <button id="justificada">üìÑ‚úÖ Justificada (F4)</button>
        <button id="siguiente">‚û°Ô∏è</button>
    </div>
</div>

<script>
    window.onload = () => {
        console.log("Cargando alumno...");
        mostrarAlumno(indiceActual);
    };
    
    document.addEventListener('DOMContentLoaded', function() {
        // Verificamos que cursadasData no est√© vac√≠o antes de llamar a mostrarAlumno
        console.log(cursadasData); // Para comprobar si los datos est√°n correctamente cargados
    
        if (cursadasData.length > 0) {
            mostrarAlumno(indiceActual); // Cargar el primer alumno
        } else {
            console.error("No hay datos de alumnos disponibles.");
        }
    });
    
    
    const fechaHoy = new Date();
    
    const day = String(fechaHoy.getDate()).padStart(2, '0');
    const month = String(fechaHoy.getMonth() + 1).padStart(2, '0');
    const year = fechaHoy.getFullYear();
    const formattedDate = `Fecha: ${day}/${month}/${year}`;
    const formattedFechaBack = `${year}-${month}-${day}`;
    
    document.getElementById('fecha-actual').textContent = formattedDate;

    const cursadasData = [
        {% for cursada in cursadas %} 
            {
                id: {{ cursada.id }},
                alumno: {
                    id: {{ cursada.alumno.id }},
                    nombre: "{{ cursada.alumno.nombre|e('js') }}",
                    apellido: "{{ cursada.alumno.apellido|e('js') }}",
                    dni: "{{ cursada.alumno.dniPasaporte|e('js') }}"
                }
            }{% if not loop.last %},{% endif %}
        {% endfor %}
    ];
    console.log(cursadasData);
    let indiceActual = 0;
    let asistenciasMarcadas = {};

    function mostrarAlumno(index) {
        if (index < 0 || index >= cursadasData.length) {
            console.log("√çndice fuera de rango");
            return;
        }
    
        const alumno = cursadasData[index].alumno;
        console.log("Mostrando alumno:", alumno);  // A√±adir esta l√≠nea para depuraci√≥n
    
        const alumnoNombreElemento = document.querySelector('.AlumnoNombre'); 
        const alumnoDniElemento = document.querySelector('.AlumnoDni'); 
    
        if (alumnoNombreElemento) {
            alumnoNombreElemento.textContent = `${alumno.nombre} ${alumno.apellido}`;
        }
    
        if (alumnoDniElemento) {
            alumnoDniElemento.textContent = `DNI: ${alumno.dni}`;
        }
    
        const estadoElemento = document.querySelector('.estado-text');
        if (estadoElemento) {
            estadoElemento.textContent = 'No marcado';
            estadoElemento.className = 'estado-text estado-neutral';
        }
    
        const observacionElemento = document.getElementById('observacion');
        const enviarElemento = document.getElementById('enviar');
        if (observacionElemento && enviarElemento) {
            observacionElemento.style.visibility = 'hidden';
            enviarElemento.style.visibility = 'hidden';
            document.getElementById('observacion-input').value = '';
        }
    
        const previa = asistenciasMarcadas[alumno.id];
        if (previa) {
            actualizarEstado(previa.estado, false);
            if (previa.observacion) {
                if (observacionElemento) {
                    observacionElemento.style.visibility = 'visible';
                    document.getElementById('observacion-input').value = previa.observacion;
                }
            }
        }
    }
    

    function guardarAsistencias() {
        const urlGuardar = "{{ path('guardar_asistencia') }}";

        fetch(urlGuardar, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(Object.values(asistenciasMarcadas)),
        })
        .then(response => {
            if (response.ok) {
                const confirmacion = document.getElementById('confirmacion');
                confirmacion.style.visibility = 'visible';
                confirmacion.textContent = '‚úÖ Datos guardados correctamente';

                setTimeout(() => {
                    confirmacion.style.visibility = 'hidden';
                }, 2000);
            } else {
                response.text().then(text => console.error("Error al guardar:", text));
            }
        })
        .catch(error => console.error('Error en la petici√≥n:', error));
    }

    function actualizarEstado(estado, guardar = true) {
        const spanEstado = document.querySelector('.estado-text');
        spanEstado.textContent = estado;
        spanEstado.className = 'estado-text estado-' + estado.toLowerCase().replace(' ', '');

        const alumnoId = cursadasData[indiceActual].alumno.id;
        let observacion = document.getElementById('observacion-input').value || '';

        if (estado === 'Justificada') {
            document.getElementById('observacion').style.visibility = 'visible';
            document.getElementById('enviar').style.visibility = 'visible';
        } else {
            document.getElementById('observacion').style.visibility = 'hidden';
            document.getElementById('enviar').style.visibility = 'hidden';
            observacion = '';
        }

        const existingAttendance = asistenciasMarcadas[alumnoId];
        if (existingAttendance && existingAttendance.fecha === formattedFechaBack) {
            existingAttendance.estado = estado;
            existingAttendance.observacion = observacion;
        } else {
            asistenciasMarcadas[alumnoId] = {
                cursada_id: cursadasData[indiceActual].id,
                fecha: formattedFechaBack,
                estado: estado,
                observacion: observacion
            };
        }

        if (guardar) {
            guardarAsistencias();
            const confirmacion = document.getElementById('confirmacion');
            confirmacion.style.visibility = 'visible';
            confirmacion.textContent = '‚úÖ Datos guardados correctamente';
            setTimeout(() => {
                confirmacion.style.visibility = 'hidden';
            }, 2000);
        }
    }

    function avanzarSiEsPosible() {
        if (indiceActual < cursadasData.length - 1) {
            indiceActual++;
            mostrarAlumno(indiceActual);
        }
    }

    document.getElementById('enviar').addEventListener('click', () => {
        actualizarEstado('Justificada', true);
        setTimeout(() => {
            avanzarSiEsPosible();
        }, 1000);
    });

    document.getElementById('anterior').addEventListener('click', () => {
        if (indiceActual > 0) {
            indiceActual--;
            mostrarAlumno(indiceActual);
        }
    });

    document.getElementById('siguiente').addEventListener('click', avanzarSiEsPosible);

    document.getElementById('presente').addEventListener('click', () => actualizarEstado('Presente'));
    document.getElementById('ausente').addEventListener('click', () => actualizarEstado('Ausente'));
    document.getElementById('mediafalta').addEventListener('click', () => actualizarEstado('Media falta'));
    document.getElementById('justificada').addEventListener('click', () => actualizarEstado('Justificada', false));

    window.onload = () => {
        mostrarAlumno(indiceActual);
    };

    document.addEventListener('keydown', function (event) {
        switch (event.key) {
            case 'ArrowLeft':
                document.getElementById('anterior').click();
                break;
            case 'ArrowRight':
                avanzarSiEsPosible();
                break;
            case 'F1':
                event.preventDefault();
                actualizarEstado('Presente', true);
                setTimeout(avanzarSiEsPosible, 1000);
                break;
            case 'F2':
                event.preventDefault();
                actualizarEstado('Ausente', true);
                setTimeout(avanzarSiEsPosible, 1000);
                break;
            case 'F3':
                event.preventDefault();
                actualizarEstado('Media falta', true);
                setTimeout(avanzarSiEsPosible, 1000);
                break;
            case 'F4':
                event.preventDefault();
                actualizarEstado('Justificada', false);
                break;
        }
    });
</script>

{% endblock %}
